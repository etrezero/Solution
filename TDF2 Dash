# 필요한 패키지 임포트
from dash import Dash, html, dash_table
from dash.dash_table.Format import Format, Scheme
import pandas as pd
import openpyxl
import warnings

# 경고 메시지 무시
warnings.filterwarnings("ignore", category=UserWarning)

# 파일 경로와 시트 이름 정의
file_path = r'C:\Users\서재영\Documents\Python Scripts\data\TDF모니터링.xlsm'
sheet_name = 'Sheet1'

# 앱 초기화
app = Dash(__name__)

# 엑셀 파일 내 특정 셀 범위에서 데이터를 읽어오는 함수
def read_data_from_excel(file_path, sheet_name, cell_range):
    wb = openpyxl.load_workbook(file_path, data_only=True)
    sheet = wb[sheet_name]
    data = []
    for row in sheet[cell_range]:
        data.append([cell.value for cell in row])
    df = pd.DataFrame(data[1:], columns=data[0])
    return df

# 맞춤형 옵션으로 데이터 테이블을 생성하는 함수
def create_data_table(file_path, sheet_name, cell_range, percent_columns=None, text_columns=None, font_size=14, header_style=None):
    df = read_data_from_excel(file_path, sheet_name, cell_range)
    
    # 열의 너비 계산
    num_columns = len(df.columns)
    column_width = "{}%".format(100 / num_columns)

    cell_style = {
        'whiteSpace': 'normal',
        'textAlign': 'center',
        'fontSize': 14, #font_size,
        'width': column_width,  # 모든 열에 동일한 너비 적용
        'minWidth': column_width,  # 최소 너비 설정
        'maxWidth': column_width,  # 최대 너비 설정
    }
    
    columns = [{"name": i, "id": i, "type": "numeric", "format": Format(precision=0, scheme=Scheme.decimal)} for i in df.columns]
    if percent_columns:
        for idx in percent_columns:
            adjusted_idx = idx - 1
            if 0 <= adjusted_idx < len(columns):
                columns[adjusted_idx]['type'] = 'numeric'
                columns[adjusted_idx]['format'] = Format(precision=2, scheme=Scheme.percentage)
    if text_columns:
        for idx in text_columns:
            adjusted_idx = idx - 1
            if 0 <= adjusted_idx < len(columns):
                columns[adjusted_idx]['type'] = 'text'
                del columns[adjusted_idx]['format']

    return dash_table.DataTable(
        data=df.to_dict('records'),
        columns=columns,
        page_size=10,
        style_cell=cell_style,
        style_header=header_style,
    )

# 앱 레이아웃 설정 [%], [텍스트], 나머지 숫자
app.layout = html.Div([
    html.Div(children='TDF 모니터링 from TDF2 Dash'),
   
   
   
    html.Div([
        html.Div([
            html.Div([
                html.Div([html.H4('Table 1'), create_data_table(file_path, sheet_name, 'A4:G12', [2, 3, 4, 5, 6, 7], [1], 10, {'backgroundColor': 'lightblue', 'textAlign': 'center'})], className='포커스 수익률'),
                html.Div([html.H4('Table 2'), create_data_table(file_path, sheet_name, 'I4:O12', [], [1], 10, {'backgroundColor': 'lightblue', 'textAlign': 'center'})], className='포커스 Rank'),
                
            ], className='grid-item'),
        ], className='col-1'),
        html.Div([
            html.Div([
                html.Div([html.H4('Table 3'), create_data_table(file_path, sheet_name, 'Q4:U13', [3, 5], [1], 10, {'backgroundColor': 'lightblue', 'textAlign': 'center'})], className='설정액_시장전체'),
                html.Div([html.H4('Table 4'), create_data_table(file_path, sheet_name, 'W4:AA13', [3, 5], [1], 10, {'backgroundColor': 'lightblue', 'textAlign': 'center'})], className='설정액_포커스'),
            ], className='grid-item'),
        ], className='col-2'),
    ], className='row'),
])

# 앱 실행
if __name__ == '__main__':
    app.run(debug=True)
